<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>accueil on qkzk</title>
    <link>http://qkzk.github.io/</link>
    <description>Recent content in accueil on qkzk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jul 2016 12:14:12 +0000</lastBuildDate>
    
	<atom:link href="http://qkzk.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Arbres binaires - 2e partie</title>
      <link>http://qkzk.github.io/uploads/docnsitale/arbres/travaux/arbre2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://qkzk.github.io/uploads/docnsitale/arbres/travaux/arbre2/</guid>
      <description>Un module de manipulation d&amp;rsquo;arbres binaires graph LR alert(Ressource) style alert fill:orange La classe BinaryTree, définie dans le module binary_tree.py proposé ici, permet de représenter des arbres binaires.
Cette classe fournit
 « deux » constructeurs : BinaryTree() et BinaryTree(data, left, right) trois accesseurs : get_data(), get_left_subtree(), et get_right_subtree() un reconnaisseur : is_empty()  Essayez
import binary_tree as bt help(bt.BinaryTree) pour afficher l&amp;rsquo;aide associée à cette classe.
Ou utilisez le notebook Jupyter</description>
    </item>
    
  </channel>
</rss>